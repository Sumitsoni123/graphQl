type Query {
  # jobs(limit: Int, offset: Int): [Job]    #it can accept empty array also
  jobs(limit: Int, offset: Int): JobSubList
  job(id: ID!): Job
  company(id: ID!): Company
}

type JobSubList {
  items: [Job!]!
  totalCount: Int!
}

type Company {
  id: ID!
  name: String!
  description: String
  jobs: [Job!]!
}

type Job {
  id: ID!
  """
  this date represent when the job was published
  """
  date: String!
  title: String!
  company: Company!
  description: String
}

type Mutation {
  job(input: createJobInput): Job # here :Job is the return type
  dJob(input: deleteJobInput): Job
  uJob(input: updateJobInput): Job
}

# input type can only be used as args
input createJobInput {
  title: String!
  description: String
}

input deleteJobInput {
  id: ID!
}

input updateJobInput {
  id: ID!
  title: String!
  description: String
}
